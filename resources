


https://www.geeksforgeeks.org/buddy-memory-allocation-program-set-1-allocation/?ref=lbp
https://github.com/evanw/buddy-malloc/blob/master/buddy-malloc.c
https://www.wfbsoftware.de/a-buddy-system-memory-allocator-explained/
https://github.com/shubhiM/Malloc-Library-Buddy-Allocation/blob/master/malloc.c
https://github.com/shubhiM/Malloc-Library-Buddy-Allocation/blob/master/utils.h



https://github.com/danieldrucker/Buddy-System-Malloc
https://github.com/preshen-goobiah/Dynamic-Memory-Allocator



http://homepage.cs.uiowa.edu/~jones/opsys/notes/27.shtml
https://github.com/matianfu/buddy
https://people.cs.pitt.edu/~jmisurda/teaching/cs449/2151/cs0449-2151-project3.htm
https://cs241.cs.illinois.edu/coursebook/Malloc#c-memory-allocation-api
https://github.com/kingsman142/CS0449/blob/master/project3/mymalloc.c
https://github.com/jja54/C-Memory-Allocator/blob/master/mymalloc.c
https://github.com/rLinks234/CS449/tree/master/project3



https://github.com/miguelperes/custom-malloc
https://github.com/HakanSunay/BuddyMemoryAllocator
https://stackoverflow.com/questions/33716416/c-how-to-write-to-read-from-memory-address-returned-by-mmap





https://www.tutorialspoint.com/cprogramming/c_typedef.htm



https://stackoverflow.com/questions/34249822/why-malloc1-gives-more-than-one-page-size
https://stackoverflow.com/questions/34249822/why-malloc1-gives-more-than-one-page-size
https://stackoverflow.com/questions/19676688/how-malloc-and-sbrk-works-in-unix



https://stackoverflow.com/questions/1119134/how-do-malloc-and-free-work
https://stackoverflow.com/questions/3479330/how-is-malloc-implemented-internally







sbrk is used when <=4096(which is aslo the PAGESIZE)
for >4096 we will use mmap.